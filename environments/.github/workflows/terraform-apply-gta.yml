name: terraform-apply

on:
  push:
    branches:
      - develop
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to apply'
        required: false
        default: ''

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    environment: ${{ steps.setenv.outputs.env }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Set Environment from Branch
        id: setenv
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == "develop" ]]; then
            echo "env=dev" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == "test" ]]; then
            echo "env=test" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
          fi

      - name: Replace Tokens in tfvars
        uses: cschleiden/replace-tokens@v1
        with:
          files: 'environments/${{ github.event.inputs.environment || steps.setenv.outputs.env }}.tfvars'
        env:
          admin_username: ${{ secrets.ADMIN_USERNAME }}
          admin_password: ${{ secrets.ADMIN_PASSWORD }}
          app_location: ${{ secrets.APP_LOCATION }}
          db_location: ${{ secrets.DB_LOCATION }}
          msg_location: ${{ secrets.MSG_LOCATION }}
          sm_location: ${{ secrets.SM_LOCATION }}
          aks_location: ${{ secrets.AKS_LOCATION }}
          location: ${{ secrets.LOCATION }}
          resource_group_name: ${{ secrets.RESOURCE_GROUP_NAME }}
          vm_name: ${{ secrets.VM_NAME }}
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          environment: ${{ secrets.ENVIRONMENT }}
          sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}
          sql_admin_username: ${{ secrets.SQL_ADMIN_USERNAME }}
          subnet_cidr_blocks: ${{ secrets.SUBNET_CIDR_BLOCKS }}
          subnet_name: ${{ secrets.SUBNET_NAME }}
          subnet_names: ${{ secrets.SUBNET_NAMES }}
          tenant_id: ${{ secrets.TENANT_ID }}
          vm_size: ${{ secrets.VM_SIZE }}
          address_space: ${{ secrets.ADDRESS_SPACE }}


      - name: Terraform Init
        run: terraform init -reconfigure -backend-config="backend/backend-${{ github.event.inputs.environment || steps.setenv.outputs.env }}.tfbackend"

      - name: Terraform Plan
        run: terraform plan -var-file="environments/${{ github.event.inputs.environment || steps.setenv.outputs.env }}.tfvars"

      - name: Terraform Apply
        run: terraform apply -var-file="environments/${{ github.event.inputs.environment || steps.setenv.outputs.env }}.tfvars" -auto-approve