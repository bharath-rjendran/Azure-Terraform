name: terraform-apply-Azure-Resources

on:
  push:
    branches:
      - develop
      - main
      - feature/*
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to apply'
        required: false
        default: 'test'

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set Environment from Branch or Input
        id: setenv
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.environment }}" != "" ]]; then
            echo "ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          else
            BRANCH="${GITHUB_REF##*/}"
            if [[ "$BRANCH" == "main" ]]; then
              echo "ENV=prod" >> $GITHUB_ENV
            elif [[ "$BRANCH" == "develop" ]]; then
              echo "ENV=dev" >> $GITHUB_ENV
            else
              echo "ENV=test" >> $GITHUB_ENV
            fi
          fi

      - name: Print selected environment
        run: | 
          echo "Selected environment: $ENV"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show


      - name: Replace Tokens in tfvars
        uses: cschleiden/replace-tokens@v1
        with:
          files: environments/${{ env.ENV }}.tfvars
        env:
          admin_username: ${{ secrets.ADMIN_USERNAME }}
          admin_password: ${{ secrets.ADMIN_PASSWORD }}
          app_location: ${{ secrets.APP_LOCATION }}
          db_location: ${{ secrets.DB_LOCATION }}
          msg_location: ${{ secrets.MSG_LOCATION }}
          sm_location: ${{ secrets.SM_LOCATION }}
          aks_location: ${{ secrets.AKS_LOCATION }}
          location: ${{ secrets.LOCATION }}
          resource_group_name: ${{ secrets.RESOURCE_GROUP_NAME }}
          vm_name: ${{ secrets.VM_NAME }}
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          environment: ${{ secrets.ENVIRONMENT }}
          sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}
          sql_admin_username: ${{ secrets.SQL_ADMIN_USERNAME }}
          subnet_cidr_blocks: ${{ secrets.SUBNET_CIDR_BLOCKS }}
          subnet_name: ${{ secrets.SUBNET_NAME }}
          subnet_names: ${{ secrets.SUBNET_NAMES }}
          tenant_id: ${{ secrets.TENANT_ID }}
          vm_size: ${{ secrets.VM_SIZE }}
          address_space: ${{ secrets.ADDRESS_SPACE }}

      - name: Show rendered tfvars file
        run: |
          echo "----- ${ENV} environment tfvars -----"
          cat environments/${{ env.ENV }}.tfvars

      - name: Terraform Init
        run: terraform init -reconfigure -backend-config="backend/backend-${{ env.ENV }}.tfbackend"

      - name: Terraform Plan
        run: terraform plan -var-file="environments/${{ env.ENV }}.tfvars"

      - name: Terraform Apply
        run: terraform apply -var-file="environments/${{ env.ENV }}.tfvars" -auto-approve
